- name: Initializing Stolon  on node1
  ansible.builtin.expect:
    command: "stolonctl --cluster-name '{{ cluster_name }}' --store-backend='{{ store_backend }}' \
      --store-endpoints='{{ store_endpoints }}':'{{ store_endpoint_port }}' init"
    responses:
      command: "yes"
- name: Stolon sentinel command
  ansible.builtin.shell: "nohup stolon-sentinel --cluster-name '{{ cluster_name }}' \
    --store-backend='{{ store_backend }}' --store-endpoints='{{ store_endpoints }}':'{{ store_endpoint_port }}' &"
  changed_when: true

- name: Running keeper command
  ansible.builtin.shell: "nohup stolon-keeper --cluster-name '{{ cluster_name }}' --store-backend='{{ store_backend }}' \
    --store-endpoints='{{ store_endpoints }}':'{{ store_endpoint_port }}' --uid '{{ cluster_uid[0] }}' --data-dir '{{ data_dir }}' \
    --pg-su-username='{{ pg_su_user }}' --pg-su-password='{{ pg_su_user_passwd }}' --pg-repl-username='{{ pg_repl_user }}' \
    --pg-repl-password='{{ pg_repl_user_passwd }}' --pg-listen-address='{{ pg_listen_address }}' \
    --pg-port='{{ pg_port }}' --pg-bin-path='{{ pg_bin_path }}' &"
  changed_when: true

- name: Sentinel running command
  ansible.builtin.shell: "nohup stolon-sentinel --cluster-name '{{ cluster_name }}' --store-backend='{{ store_backend }}' \
    --store-endpoints='{{ store_endpoints }}':'{{ store_endpoint_port }}' &"
  changed_when: true

- name: Starting proxy
  ansible.builtin.shell: "nohup stolon-sentinel --cluster-name '{{ cluster_name }}' --store-backend='{{ store_backend }}' \
    --store-endpoints='{{ store_endpoints }}':'{{ store_endpoint_port }}' --listen-address='{{ ip_address_list[1] }}' --port='{{ proxy_port }}' &"
  changed_when: true

- name: Initializing Stolon  on node1
  ansible.builtin.expect:
    command: "stolonctl --cluster-name '{{ cluster_name }}' --store-backend='{{ store_backend }}' \
      --store-endpoints='{{ store_endpoints }}':'{{ store_endpoint_port }}' init"
    responses:
      command: "yes"
- name: Stolon sentinel command
  ansible.builtin.shell: "nohup stolon-sentinel --cluster-name '{{ cluster_name }}' \
    --store-backend='{{ store_backend }}' --store-endpoints='{{ store_endpoints }}':'{{ store_endpoint_port }}' &"
  changed_when: true

- name: Running keeper command
  ansible.builtin.shell: "nohup stolon-keeper --cluster-name '{{ cluster_name }}' --store-backend='{{ store_backend }}' \
    --store-endpoints='{{ store_endpoints }}':'{{ store_endpoint_port }}' --uid '{{ cluster_uid[0] }}' --data-dir '{{ data_dir }}' \
    --pg-su-username='{{ pg_su_user }}' --pg-su-password='{{ pg_su_user_passwd }}' --pg-repl-username='{{ pg_repl_user }}' \
    --pg-repl-password='{{ pg_repl_user_passwd }}' --pg-listen-address='{{ pg_listen_address }}' \
    --pg-port='{{ pg_port }}' --pg-bin-path='{{ pg_bin_path }}' &"
  changed_when: true

- name: Sentinel running command
  ansible.builtin.shell: "nohup stolon-sentinel --cluster-name '{{ cluster_name }}' --store-backend='{{ store_backend }}' \
    --store-endpoints='{{ store_endpoints }}':'{{ store_endpoint_port }}' &"
  changed_when: true

- name: Starting proxy
  ansible.builtin.shell: "nohup stolon-sentinel --cluster-name '{{ cluster_name }}' --store-backend='{{ store_backend }}' \
    --store-endpoints='{{ store_endpoints }}':'{{ store_endpoint_port }}' --listen-address='{{ ip_address_list[] }}' --port='{{ proxy_port }}' &"
  changed_when: true
